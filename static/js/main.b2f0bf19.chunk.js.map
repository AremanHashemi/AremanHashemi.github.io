{"version":3,"sources":["Images/Selfie.jpeg","Components/Header.js","Components/ProjectList.js","Components/Body.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","margin","spacing","typography","fontFamily","join","aboutMe","textAlign","color","fontSize","paddingTop","large","width","height","alignSelf","header","background","borderBottom","palette","divider","social","Header","classes","Box","className","Grid","container","direction","alignItems","justify","item","xs","Avatar","alt","src","Selfie","style","fontWeight","Typography","IconButton","href","flexGrow","overflow","paper","maxWidth","marginBottom","padding","backgroundColor","title","AutoGridNoWrap","data","Data","console","log","map","project","index","Paper","wrap","placeSelf","position","left","Img","Title","Link","Body","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2f0bf19.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Selfie.68d0b4d9.jpeg\";","import Box from '@material-ui/core/Box';\nimport React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Selfie from '../Images/Selfie.jpeg';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  typography:{\n      fontFamily: [\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Arial',\n        'sans-serif',\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(','),\n  },\n  aboutMe:{\n     textAlign:\"center\",\n     color:\"White\",\n     fontSize:\"1.50rem\",\n     fontFamily:'monospace',\n\t paddingTop:'0'\n  },\n  large: {\n    width: theme.spacing(30),\n    height: theme.spacing(30),\n    alignSelf: 'center',\n  },\n  header:{\n\tbackground: 'linear-gradient(310deg,#553c9a,#97266d);',\n    borderBottom: `3px solid ${theme.palette.divider}`,\n  },\n  social:{\n    fontSize:'xxx-large',\n    color: 'black'\n  },\n}));\nexport default function Header() {\n    const classes = useStyles();\n\treturn (\n\t\t<Box className={classes.header}>\n\t\t\t<Grid\n\t\t\t\tcontainer\n\t\t\t\tdirection=\"column\"\n\t\t\t\talignItems=\"center\"\n\t\t\t\tjustify=\"center\">\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Avatar alt=\"Areman Hashemi\" src={Selfie} className={classes.large} />\n\t\t\t</Grid>\n\t\t\t<Box className={classes.aboutMe} >\n\t\t\t\t<Grid item xs={12} style={{fontWeight:\"bolder\", fontSize:\"2.0rem\"}}>\n\t\t\t\t\t<Typography style={{fontSize:\"2rem\", fontFamily:\"monospace\"}}>Areman Hashemi</Typography>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} style={{color:\"#9088af\"}}>\n\t\t\t\t\t<Typography>aremanhashemi@gmail.com</Typography>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} style={{fontSize:\"1rem\"}}>\n\t\t\t\t\t<p>fullstack developer with interests in parallel and distributed systems\n\t\t\t\t\t<br/>\n\t\t\t\t\tOccasionally I cook something good\n\t\t\t\t\t</p>            \n\t\t\t\t</Grid>\n\t\t\t</Box>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<IconButton href=\"https://github.com/AremanHashemi\">\n\t\t\t\t\t<GitHubIcon className={classes.social}/>\n\t\t\t\t</IconButton>\n\t\t\t\t<IconButton href=\"https://www.instagram.com/areman_hashemi/\">\n\t\t\t\t\t<InstagramIcon className={classes.social}/>\n\t\t\t\t</IconButton>\n\t\t\t\t<IconButton href=\"https://www.linkedin.com/in/areman-hashemi/\">\n\t\t\t\t\t<LinkedInIcon className={classes.social}/>\n\t\t\t\t</IconButton>\n\t\t\t</Grid>\n\t\t</Grid>\n\t</Box>\n\t);\n}","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Data from '../Data/projects.json';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    overflow: 'hidden',\n  },\n  paper: {\n    maxWidth: 400,\n    margin: `${theme.spacing(1)}px auto`,\n\tmarginBottom: \"10px\",\n    padding: theme.spacing(1),\n\tbackgroundColor: \"#2d3748\",\n\tcolor: \"white\",\n  },\n  title: {\n\t  color:\"white\",\n\t  fontSize: \"1.25em\",\n\t  fontWeight: \"bold\",\n  }\n}));\n\nconst message = `Truncation should be conditionally applicable on this long line of text\n as this is a much longer line than what the container can support. `;\n\nexport default function AutoGridNoWrap() {\n  const classes = useStyles();\n  let data = Data[\"projects\"];\n  console.log(data);\n  const buildProjectList = () => (\n\t  data.map((project,index)=>(\n\t\t<Paper className={classes.paper} key={index}>\n\t\t\t<Grid container wrap=\"nowrap\" spacing={2}>\n\t\t\t\t<Grid style={{placeSelf:\"center\",position:\"relative\", left:\"-3vh\"}} item>\n\t\t\t\t\t<Avatar \n\t\t\t\t\t\tsrc={project.Img} \n\t\t\t\t\t\talt={project.Title}\n\t\t\t\t\t\tstyle={{height:\"80px\", width:\"80px\"}}/>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs>\n\t\t\t\t\t{project.Link? \n\t\t\t\t\t\t<a href={project.Link} className={classes.title}> {project.Title} </a>\n\t\t\t\t\t\t:<Typography className={classes.title}>{project.Title}</Typography>\n\t\t\t\t\t}\n\t\t\t\t\t<Typography>{project.Body}</Typography>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Paper>\n\t  ))\n  )\n  return (\n    <div className={classes.root}>\n\t  \t{buildProjectList()}    \n    </div>\n  );\n}","import Box from '@material-ui/core/Box';\nimport ProjectList from './ProjectList';\nimport './Body.css';\n\nexport default function Header() {\n\treturn (\n\t\t<Box id='Body'>\n\t\t\t<div id='ProjectList'>\n\t\t\t\t<h1 style={{textAlign:\"-webkit-center\"}}>Projects</h1>\n\t\t\t\t<ProjectList/>\n\t\t\t</div>\t\n\t\t</Box>\n\t);\n}","import React from 'react';\nimport Header from './Components/Header';\nimport Body from './Components/Body'\n\nexport default function App() {\n  return (\n    <div style={{backgroundColor:\"#1a202c\"}}>\n      <Header/>\n      <Body>\n      </Body>\n    </div>\n  );\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}